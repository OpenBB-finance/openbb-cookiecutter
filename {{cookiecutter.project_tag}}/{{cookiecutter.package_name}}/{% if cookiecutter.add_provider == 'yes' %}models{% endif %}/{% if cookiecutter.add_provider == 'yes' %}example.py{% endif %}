"""Example Data Integration.

The OpenBB SDK gives developers easy tools for integration.

To use it, developers should:
1. Define the request/query parameters.
2. Define the resulting data schema.
3. Define how to fetch raw data.

First 2 steps make sure developers really get to know their data.
This is called the "Know Your Data" principle.

Note: The format of the QueryParams and Data is defined by a pydantic model that can
be entirely custom, or inherit from the OpenBB standardized models.

This file has sample code and shows how the OpenBB standard works.
"""

from typing import Dict, List, Optional, Any
from pydantic import Field

from {{cookiecutter.package_name}}.standard_models.example_standard import (
    StandardData, StandardQueryParams
)
from openbb_provider.abstract.fetcher import Fetcher

class ExampleQueryParams(StandardQueryParams):
    """Example provider query.

    This is the definition of our query parameters that are specific to this provider.
    Since it already has the `symbol` field from the standard model, we just add any
    new ones specific to this provider.
    """

    limit: Optional[int] = Field(
        default=2, description="The number of results to return per page."
    )

class ExampleData(StandardData):
    """Sample provider data.

    This is how we want to see our results. It follows the typical OHLCV format.
    """

    # Since our data matches the standard one, we just set up how the field names
    # connect to the provider's data.
    class Config:
        fields = {
            "open": "o",
            "high": "h",
            "low": "l",
            "close": "c",
            "volume": "v",
        }

    # If there are any extra fields not in the standard model, put them here.

class ExampleFetcher(
    Fetcher[
        ExampleQueryParams,
        ExampleData,
    ]
):
    """Example Fetcher class.

    This class is responsible for the actual data retrieval.
    It handles standardization of input arguments (the query parameters), fetching the
    data and converting it into a format that we want.
    """

    @staticmethod
    def transform_query(params: Dict[str, Any]) -> ExampleQueryParams:
        """Define example transform_query.

        Here we can pre-process the query parameters and add any extra parameters that
        will be used inside the extract_data method.
        """
        # Both the standard and provider-specific query parameters are unpacked below.
        return ExampleQueryParams(**params)

    @staticmethod
    def extract_data(
        query: ExampleQueryParams,
        credentials: Optional[Dict[str, str]],
        **kwargs: Any,
    ) -> List[dict]:
        """Define example extract_data.

        Here we make the actual request to the data provider and receive the raw data.
        If you said your Provider class needs credentials you can get them here.
        """
        api_key = (
            credentials.get("{{cookiecutter.package_name}}_api_key")
            if credentials
            else ""
        )

        # Here we mock an example_response for brevity.
        example_response = [
            {
                "o": 2,
                "h": 5,
                "l": 1,
                "c": 4,
                "v": 5,
            },
            {
                "o": 4,
                "h": 7,
                "l": 3,
                "c": 6,
                "v": 10,
            },
        ]

        return example_response


    @staticmethod
    def transform_data(data: List[dict]) -> List[ExampleData]:
        """Define example transform_data.

        Right now, we're converting the data to fit our desired format.
        You can apply other transformations to it here.
        """
        return [ExampleData(**d) for d in data]
